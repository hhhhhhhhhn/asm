global write
# string: *u8, file_desc: u64 -> byte_written: u64
fn write
	# string file_desc
	1 unrot # 1 string file_desc
	swap # 1 file_desc string
	dup # 1 file_desc string string
	strlen # 1 file_desc string strlen
	syscall
end

global open_file_writing
# filename: *u8 -> file_desc: u64
fn open_file_writing
	2 swap # 2 filename
	577 # O_WRONLY | O_CREAT | O_TRUNC
	0770 # Mode
	syscall
end

global close_file
# file_desc: u64
fn close_file
	3 swap # 3 file_desc
	0 0 # padding args
	syscall
end

global mmap
# pages (how many multiples of 4096 bytes): u64 -> addr: void*
fn mmap
	9 swap # SYSCALL_MMAP pages
	0 swap # SYSCALL_MMAP NULL pages
	4096 mul # SYSCALL_MMAP NULL pages*4096
	3 # PROT_READ | PROT_WRITE
	34 # MAP_PRIVATE | MAP_ANONYMOUS
	-1 # fd (ignored)
	0 # offset (ignored)
	syscall7
end

global munmap
# addr: void*, pages: u64 -> void
fn munmap
	11 unrot # SYSCALL_MUNMAP addr pages
	0 # Padding
	syscall
	pop
end
