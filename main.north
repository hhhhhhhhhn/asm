# n: u64 -> result: u64
fn fib
	dup 1 # n n 1
	le # n (n<=1)
	if
		pop 1 # 1
		return
	end
	dup # n n
	1 sub # n (n-1)
	fib # n fib(n-1)
	swap # fib(n-1) n
	2 sub fib # fib(n-1) fib(n-2)
	add # fib(n-1) + fib(n-2)
end

# n: u64 -> sum: u64
fn sum
	0 # n sum=0
	loop
		loop break end # just a test
		over # n sum n
		add # n (sum+n)
		swap # (sum+n) n
		1 sub # (sum+n) (n-1)
		dup # (sum+n) (n-1) (n-1)
		0 lt # (sum+n) (n-1) (n-1<0)
		if
			break
		else
			swap # (n-1) (sum+n)
		end
	end
	pop
end

extern mmap extern munmap
fn main
	0b111 printi newline
end
